<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RSA on Notes</title>
    <link>http://zedchance.github.io/notes/tags/RSA/</link>
    <description>Recent content in RSA on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/RSA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS138-lecture-20210506</title>
      <link>http://zedchance.github.io/notes/CS138/CS138-lecture-20210506/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS138/CS138-lecture-20210506/</guid>
      <description>Network security #  What is network security? #  Cryptography #  RSA #  + = public, - = private
Given the public key   \( K_{pub} \)  and the private key  \( K_{priv} \)  , we can decrypt anything encrypted by the public key, and vice versa.
Alice invents a symmetric key, and sends it to Bob using RSA encryption. That way the computationally slow RSA algorithm can be used to send the symmetric key, and the symmetric key can be used for continual encryption.</description>
    </item>
    
    <item>
      <title>CS138-lecture-20210511</title>
      <link>http://zedchance.github.io/notes/CS138/CS138-lecture-20210511/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS138/CS138-lecture-20210511/</guid>
      <description>Network security cont. #  RSA cont. #  Authentication #  ap = authentication protocol (fictional)
Challenge-response mechanism for authentication:
 Using symmetric shared key,   \( K_{ab} \)   Alice sends the message to bob saying &amp;ldquo;I am alice&amp;rdquo; Bob generates a random one-time use nonce, and encrypts it with the shared key  \( R = K_{ab}(\text{nonce}) \)   Alice decrypts  \( R \)  based on the symmetric key  \( K_{ab} \)  .</description>
    </item>
    
    <item>
      <title>CS152-lecture-20210624</title>
      <link>http://zedchance.github.io/notes/CS152/CS152-lecture-20210624/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS152/CS152-lecture-20210624/</guid>
      <description>Asymmetric encryption #  A very useful type of encryption where encryption and decryption is done using key pairs, one public and one private. This can solve the key exchange problem, and also can be used to digitally sign messages.
Now most cryptography is symmetric, only a small amount of CPU cycles are spent on asymmetric cryptography.
RSA #  A revolutionary cryptosystem designed by Rivest, Shamir, Adleman at MIT in the 1970s.</description>
    </item>
    
  </channel>
</rss>
