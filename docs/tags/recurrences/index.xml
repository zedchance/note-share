<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>recurrences on Notes</title>
    <link>http://zedchance.github.io/notes/tags/recurrences/</link>
    <description>Recent content in recurrences on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/recurrences/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS140-lecture-20211006</title>
      <link>http://zedchance.github.io/notes/CS140/CS140-lecture-20211006/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS140/CS140-lecture-20211006/</guid>
      <description>Common divide and conquer problems #  Counting Inversions #  Inversions are the number of out of order pairs in an array of numbers. We can use the amount of inversions as a ranking for multiple arrays.
If we consider the first array as sorted (the indices), we can use the second array&amp;rsquo;s indices as a rank to compare.
When we try and count inversions, we are given an array of   \( n \)  numbers.</description>
    </item>
    
    <item>
      <title>CS140-lecture-20211014</title>
      <link>http://zedchance.github.io/notes/CS140/CS140-lecture-20211014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS140/CS140-lecture-20211014/</guid>
      <description>Recurrences cont #  Recursion tree method #  Another method to solve recurrences is to draw a recursion tree, where each node gets a cost. The cost of each node is the additional work done on each recursive call (not recursive call itself).
The leaf nodes are the base cases. The idea is to identify a pattern, and use a known series to evaluate that pattern.
Then, after identifying the sum of each level of the tree, you then sum all the level&amp;rsquo;s themselves (except the base level, the leaves).</description>
    </item>
    
  </channel>
</rss>
