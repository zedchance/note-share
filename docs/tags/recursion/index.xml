<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>recursion on Notes</title>
    <link>http://zedchance.github.io/notes/tags/recursion/</link>
    <description>Recent content in recursion on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/recursion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS130-lecture-20200902</title>
      <link>http://zedchance.github.io/notes/CS130/CS130-lecture-20200902/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS130/CS130-lecture-20200902/</guid>
      <description>Concerning the survey from last class #  The differences between an array and a linked list:
 Access: arrays can access an spot instantly, linked lists need to iterate from the head until they reach the target. Size: arrays are fixed in size, linked lists can become bigger or smaller  Stacks can be implemented using a linked list or an array. FILO
Queues can be implemented using a linked list or a circular array.</description>
    </item>
    
    <item>
      <title>CS135-lecture-20210227</title>
      <link>http://zedchance.github.io/notes/CS135/CS135-lecture-20210227/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS135/CS135-lecture-20210227/</guid>
      <description>Functional Programming #  Other functions may write to this.sum, so this could be incorrect in the future.
Any loop can be turned into a recursively structured function.
Example of pow #  int pow(int x, int y) if (very small) solve directly else solve with smaller_pow So when is exponentiation very small? This is the base case, where y = 0.
int pow(int x, int y) if (y == 0) return 1 else solve with smaller_pow Now we need to figure out the else branch, we know that x^y = x^(y-1) * x.</description>
    </item>
    
  </channel>
</rss>
