<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>functional programming on Notes</title>
    <link>http://zedchance.github.io/notes/tags/functional-programming/</link>
    <description>Recent content in functional programming on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS135-lecture-20210227</title>
      <link>http://zedchance.github.io/notes/CS135/CS135-lecture-20210227/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS135/CS135-lecture-20210227/</guid>
      <description>Functional Programming #  Other functions may write to this.sum, so this could be incorrect in the future.
Any loop can be turned into a recursively structured function.
Example of pow #  int pow(int x, int y) if (very small) solve directly else solve with smaller_pow So when is exponentiation very small? This is the base case, where y = 0.
int pow(int x, int y) if (y == 0) return 1 else solve with smaller_pow Now we need to figure out the else branch, we know that x^y = x^(y-1) * x.</description>
    </item>
    
  </channel>
</rss>
