<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design patterns on Notes</title>
    <link>http://zedchance.github.io/notes/tags/design-patterns/</link>
    <description>Recent content in design patterns on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS133-lecture-20210227</title>
      <link>http://zedchance.github.io/notes/CS133/CS133-lecture-20210227/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS133/CS133-lecture-20210227/</guid>
      <description>Design Patterns #  Strategy pattern #  An example in codename one
Composite pattern #  An example of the &amp;ldquo;wrong way to do things&amp;rdquo;
A refactored way:
Decorator pattern #  As a reminder, this is not the same as the composite pattern:
State pattern #  Pree&amp;rsquo;s metapatterns #  Concerning the state pattern vs the strategy pattern
Singleton pattern #  Note the synchronize keyword in the method header, this makes the method thread safe.</description>
    </item>
    
  </channel>
</rss>
