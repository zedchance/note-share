<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>time complexity on Notes</title>
    <link>http://zedchance.github.io/notes/tags/time-complexity/</link>
    <description>Recent content in time complexity on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/time-complexity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS130-lecture-20200909</title>
      <link>http://zedchance.github.io/notes/CS130/CS130-lecture-20200909/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS130/CS130-lecture-20200909/</guid>
      <description>Runtime analysis cont. #  Big Oh notation is pretty much the only asymptotic notation used.
Initializing arrays of ints in Java initializes everything to 0, so it is a linear process. The if statement has an else with a loop, so at a worse case it is O(n).
On line 73, you have to count the other functions runtime analysis also.</description>
    </item>
    
    <item>
      <title>CS130-lecture-20200914</title>
      <link>http://zedchance.github.io/notes/CS130/CS130-lecture-20200914/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS130/CS130-lecture-20200914/</guid>
      <description>Annoucements #  New webcam usage survey
Exercise solutions:
 Runtime analysis cont. #  Space complexity analysis #  1MB) kB
Strings have the fields: start address, length, offset, hash
For example:
str = &amp;#34;Java&amp;#34;; str1); The space is constant because the sub string isn&amp;rsquo;t copied, just more references are made.
 c + 4n, so O(n)  32 + 64n)  Normally you don&amp;rsquo;t count the space of the parameters or the return.</description>
    </item>
    
  </channel>
</rss>
