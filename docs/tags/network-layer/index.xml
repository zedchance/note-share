<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network layer on Notes</title>
    <link>http://zedchance.github.io/notes/tags/network-layer/</link>
    <description>Recent content in network layer on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/network-layer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS138-lecture-20210408</title>
      <link>http://zedchance.github.io/notes/CS138/CS138-lecture-20210408/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS138/CS138-lecture-20210408/</guid>
      <description>SMTP socket programming assignment #  TCP cont. #  Congestion control #  https://media.pearsoncmg.com/aw/ecs_kurose_compnetwork_7/cw/content/interactiveanimations/tcp-congestion/index.html
Throughput #  Fairness #  Network layer #  Quick review
 The application layer is app to app. Transport layer is process to process Network layer is device to device (machine to machine), including routers  ATM = asynchronous transfer model
For internet
 Connection is at transport layer (TCP) Datagrams (network connectionless)   ATM/X.</description>
    </item>
    
    <item>
      <title>CS138-lecture-20210415</title>
      <link>http://zedchance.github.io/notes/CS138/CS138-lecture-20210415/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS138/CS138-lecture-20210415/</guid>
      <description>Network layer cont. #  Switching fabrics #  Since data can flow bidirectionally, inputs can become outputs, and vice versa.
Output ports #  Input port queueing #  IP: Internet Protocol #  ICMP = internet control message protocol
Datagram format #  The header is 20 bytes long.
Upper layer can be TCP or UDP, or ICMP
A type could be multimedia, satellite signal etc, used for priority.</description>
    </item>
    
  </channel>
</rss>
