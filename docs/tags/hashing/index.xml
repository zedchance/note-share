<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hashing on Notes</title>
    <link>http://zedchance.github.io/notes/tags/hashing/</link>
    <description>Recent content in hashing on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/hashing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS130-lecture-20201109</title>
      <link>http://zedchance.github.io/notes/CS130/CS130-lecture-20201109/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS130/CS130-lecture-20201109/</guid>
      <description>Hash codes should use all of the fields.
Any perms of strings with the same letters will have the same hashcode, therefore this is a bad hash function.
The worst case runtime for put is O(n). The best case runtime for put is O(1). Space complexity for put is O(1).
Best case runtime for get is O(1) and worst case is O(n). Space complexity for get is O(1).
The load factor is the number of key value pairs (N) divided by the table size (M), so (\frac{10}{5}).</description>
    </item>
    
    <item>
      <title>CS130-lecture-20201116</title>
      <link>http://zedchance.github.io/notes/CS130/CS130-lecture-20201116/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS130/CS130-lecture-20201116/</guid>
      <description>C goes to the next open value because they collide
resize is called if the table is &amp;gt;= being half full.
The first 8 insertions before the resize:
Put the existing keys (they rehash), then continue putting the rest of the list
A is true B is false C is true (another case of A basically) D is false (another case of B)
For get: best case runtime is O(1), worst case is O(n).</description>
    </item>
    
  </channel>
</rss>
