<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>immutability on Notes</title>
    <link>http://zedchance.github.io/notes/tags/immutability/</link>
    <description>Recent content in immutability on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/tags/immutability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS135-lecture-20210218</title>
      <link>http://zedchance.github.io/notes/CS135/CS135-lecture-20210218/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/CS135/CS135-lecture-20210218/</guid>
      <description>Immutability #  Strings in Java are an example of immutability.
Something like
s = s + &amp;#34;abc&amp;#34;; Actually creates a new object with the 2 new strings, and the reference to s is updated, but actual strings are immutable.
Lists #  In Java a popular List class is LinkedList.
A change to either a or b will change both!
a.add(1, 5); b.get(1); Lets make an immutable List (pseudo): #  a = new List b = a.</description>
    </item>
    
  </channel>
</rss>
