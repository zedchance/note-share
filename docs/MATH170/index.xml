<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MATH170 on Notes</title>
    <link>http://zedchance.github.io/notes/MATH170/</link>
    <description>Recent content in MATH170 on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://zedchance.github.io/notes/MATH170/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MATH170-lecture-20210831</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20210831/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20210831/</guid>
      <description>Course orientation #  File: m170-syllabus.pdf  Notes during orientation #   Will be some technology, matlab, wolfram alpha Lectures all online, synchronous Async videos may be posted  </description>
    </item>
    
    <item>
      <title>MATH170-lecture-20211012</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211012/</guid>
      <description>MATLAB #  An introduction #  File: m170-matlab-linprog.pdf  For example, lets define a vector
x = [1 2 3] If we want to transpose x, we can use the &#39;:
x&#39; Or we can define a column vector like:
y=[1 2 3] which can also be defined with ;:
y=[1;2;3] So, to define an entire matrix we can use a combination of both:
A=[1 2 3; 4 5 6; 7 8 9] We can do some matrix multiplication:</description>
    </item>
    
    <item>
      <title>MATH170-lecture-20211020</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211020/</guid>
      <description>Two phase procedure #  Unbounded LP problem example #  </description>
    </item>
    
    <item>
      <title>MATH170-lecture-20211021</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211021/</guid>
      <description>Two phase procedure cont. #  Last problem finished #  Detecting a non feasible region #  Can we recognize a non-feasible region using the two phase method?
Phase one completes because we have all negative coefficients in the last row, but since   \( w \not = 0 \)  , there is no solution. We could solve this using Big M method where  \( s_4 &amp;gt; 0 \)  , and  \( z&amp;#39; = z &amp;#43; M s_4 \)  .</description>
    </item>
    
    <item>
      <title>MATH170-lecture-20211026</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211026/</guid>
      <description>Sensitivity analysis cont. #  By increasing the right hand side of the   \( c_1 \)  constraint by 1 unit, we obtain a new  \( \tilde{z} \)  value of  \( \frac{108}{7} \)  .
So the shadow price is  \( z - \tilde{z} = \frac{22}{7} \)  .
Next, identify shadow prices from a completed simplex tableau:
Shadow prices using MATLAB #  A=[2 1; 1 4] b=[3 4]&#39; C=[-7 -6]&#39; lb=[0 0]&#39; [x, u]=linprog(C,A,b,[],[],lb,[]) Optimal solution found.</description>
    </item>
    
    <item>
      <title>MATH170-lecture-20211028</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-20211028/</guid>
      <description>Sensitivity analysis cont. #  Recall previous example #  So how can we identify the shadow price when we have artificial variables by looking at the last row of the simplex tableau?
Notice that moving the upper constraint up does not change the optimal solution at point   \( C \)  . But if you move the lower constraint up the optimal point will change.
Correction:  \( x_5 \)  replaced  \( x_2 \)  , so the left hand side BV is labeled incorrect.</description>
    </item>
    
    <item>
      <title>MATH170-lecture-notes</title>
      <link>http://zedchance.github.io/notes/MATH170/MATH170-lecture-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zedchance.github.io/notes/MATH170/MATH170-lecture-notes/</guid>
      <description>MATH170 lecture notes #  File: m170-lecture-notes.pdf  </description>
    </item>
    
  </channel>
</rss>
