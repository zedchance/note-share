---
title: CS130-lecture-20201007
tags: ["count sort", "heapsort", "radix sort"]
---

![IMAGE](/28451282D7DD0D66BB62171B63195898.jpg)
![IMAGE](/97E3C19FD7ADBF3CE8F51B68449AF05E.jpg)
![IMAGE](/652DB88FD5AAAA0658CD6A994090497B.jpg)
![IMAGE](/E7764631635D0FE5C0CA6D394AAED8F2.jpg)
![IMAGE](/E0198F3B3BF65A16438E0A73B227A7F3.jpg)
![IMAGE](/08080845F868440B9AF8CF299108615D.jpg)
![IMAGE](/9262D7A1E909B3F25D8654C26025F90C.jpg)
![IMAGE](/58D62C62321AE5FE667846F4C4D8B2CF.jpg)
![IMAGE](/328A6EC163EABE5ACA0486AAD988EE9F.jpg)
![IMAGE](/F1268067C6BA9987AE9B457FED995A30.jpg)

Running time complexity: 3n + k)
Space time complexity: O(n + k)
Stable algorithm

![IMAGE](/735A3523CF381B5835120111DD4284D6.jpg)

Sort from least significant position to most significant position

![IMAGE](/DFE13794B7327778A94DC5EA3C23F37F.jpg)

---

![IMAGE](/0F9A31D013EC4665DA9A848887D59B14.jpg)
![IMAGE](/B41E1003BBE7DF89F03E729B2E22B419.jpg)

Runtime of `findLargestStrings` is O((n+m)log(m))
Space complexity is O(m)

![IMAGE](/134A339169139EEBF474EB333FDDD0E4.jpg)
