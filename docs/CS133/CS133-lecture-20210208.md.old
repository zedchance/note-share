---
title: CS133-lecture-20210208
tags: ["UML", "software design", "clean code"]
---

## UML

![IMAGE](/D0C9708AEC2560F49AF788ED64BA84E0.jpg)
![IMAGE](/6A824D6C1143381299AFCAA9F4FB0F22.jpg)
![IMAGE](/C0547B8BA68152DD30E28296AF4A962D.jpg)
![IMAGE](/9175FB59074F4FAAE213D862FE63CF48.jpg)
![IMAGE](/B3BBB3B0C43E47AADA733AFFD928154F.jpg)
![IMAGE](/EBC6CB7F699547AE065DED575FEC5D17.jpg)
![IMAGE](/9D7432EAE97F4D5FC2513C91F85F64F1.jpg)
![IMAGE](/ED2E93DEF0AE2990C419A769422B796A.jpg)

![IMAGE](/2B53DFC9FA9CFB16CF16C96BC7D0B538.jpg)
![IMAGE](/3CA878968320BB657DFAFE9962B8F7CC.jpg)
![IMAGE](/DB033D0268210669912DDD0E994D3751.jpg)
![IMAGE](/C47ECBD08A9CFE5AE52C263884A66825.jpg)
![IMAGE](/3C69576DB67817E300D97CB357E40A52.jpg)
![IMAGE](/4955EE22A3EE9518C9BF59FD7500C3E4.jpg)
![IMAGE](/CA71AF3DFF97D8BCE81203ECDF26FAFC.jpg)
![IMAGE](/7E42223D63CB77C4D82E6AF0A426669F.jpg)
![IMAGE](/C36C0FB7142E680FEDA75693A603BDA1.jpg)
![IMAGE](/580E506E1A1D186A1439C9453AD70BAB.jpg)
![IMAGE](/025554FDEFADCCA2CE4DAB239D53F622.jpg)
![IMAGE](/846D54494F3262903B8FBF76E8131A3E.jpg)
![IMAGE](/787DD4500718873DFFFF8201F88229A3.jpg)
![IMAGE](/988CB6254ADFC07AB9DBBF2FDCA181E9.jpg)
![IMAGE](/42C37187C8BF09F455D41C1B4DD2422E.jpg)
![IMAGE](/EE885B2A12835216B373625B7BBC3C33.jpg)
![IMAGE](/194F0D4B2313460A57F7F21DBAFB24B9.jpg)
![IMAGE](/077DE1BEDADFC742A785FBA4B85A2B4F.jpg)
![IMAGE](/7237CD54005ECF5BEDFE490BFB6AF176.jpg)
![IMAGE](/FA375225C2DB7E7FB7DDAE8380A97D37.jpg)

Since there isn't a way to pass a new `DisplayPanel` object into the constructor, it is a composition.

![IMAGE](/C9119EF7125D729664BE66ED75522F5F.jpg)
![IMAGE](/16BC347EC78C6221043F50510C366DED.jpg)
![IMAGE](/D43229150F884AA85E324678369A4968.jpg)
![IMAGE](/5A3E600744C2BA12CB29DC159FDF4D5B.jpg)
![IMAGE](/E844B2270637378CAC78E7DFEF696C69.jpg)
![IMAGE](/89F9AF16BFCD88932BC49ACB9858CA23.jpg)
![IMAGE](/3ABA43E649F1BAA834B47E0D0AA04707.jpg)
![IMAGE](/AA89189F9EA525C9AC0353CB81AEE278.jpg)
![IMAGE](/76D2E6CCA58FBEE93B82DA3BEDC0A661.jpg)
![IMAGE](/CE015AD34B7070D05EFDEABF160D0723.jpg)
![IMAGE](/82CB37E05522FDB02193D4A029CECC54.jpg)
![IMAGE](/EDF852DC699FA4A52450AC656D7FD96D.jpg)

Example CRC card building

![IMAGE](/0F87DBD81BF1136AEDACF0D2F0582064.jpg)
![IMAGE](/85A5AF16D427D866113EE1A93181312C.jpg)
![IMAGE](/EB0506B9B114CE7CC9BB49D9920CF021.jpg)
![IMAGE](/70FED5A989627029F05F385FD28B9837.jpg)
![IMAGE](/C524B31E9E6DDAE468039DF7DF8D86EC.jpg)
![IMAGE](/4FBA06CF64878C3E6069FF6332B1B0BC.jpg)
![IMAGE](/80562156031A207DC7DAA440E49F25FE.jpg)
![IMAGE](/22576893BF669D45569322A742071FE0.jpg)
![IMAGE](/9B7CC081E30058D497C6854901C1CCE1.jpg)
![IMAGE](/10530947A330C074CE612FDEA7A846BC.jpg)
![IMAGE](/3C808144822810ADE7C798F5D52DAD00.jpg)

## Clean code

![IMAGE](/6E2653BA7C35088AFFB33A2AF27748FE.jpg)
![IMAGE](/4F8ED79381E7B94DE02E692E5A837B98.jpg)
![IMAGE](/D082909011700EA8A50B7FDE14B96562.jpg)
![IMAGE](/532360916D030C5CB3BA73F26135603C.jpg)
![IMAGE](/21F72F2D5E7DAD2C1A221B7852AA8BB5.jpg)
![IMAGE](/ED22B0F57511FFAFC1A071679D8B008F.jpg)
![IMAGE](/BDC17138785C047F06B7C86D64EFA8D8.jpg)
![IMAGE](/F7FA2A783988F0E0264479A6AD69E097.jpg)
![IMAGE](/DC316E3AD4E2E4E8A6DA37D1C421F3F8.jpg)
![IMAGE](/BA069B3B1CE88DC1FCA705BB3D03DEDC.jpg)
![IMAGE](/710538E1C41C1EE3117A92DD56F93AA0.jpg)
![IMAGE](/DBB81D93391A8CAE72628ED6E4D38014.jpg)
![IMAGE](/5EFFC2F6E580C27914CDF3D9EA5C4B7E.jpg)
![IMAGE](/B7577CDE5A939ADD04FDC73DB6D878ED.jpg)
![IMAGE](/6E4C8B6C4BE5ABD040EA4573B118F69A.jpg)
![IMAGE](/03F5085A3A53A24B7F045C6777716833.jpg)
![IMAGE](/4EE94F961FAC0B883032EA56AEBB098A.jpg)
![IMAGE](/76955EA80FDE5840C073501FF391DEFA.jpg)
![IMAGE](/1E0826ACA13CF99453B965EDA29E6860.jpg)
![IMAGE](/53D973FD2DC3063566B1C2C399063936.jpg)
![IMAGE](/6E6A1C7F64C8841087394EFE3E903C61.jpg)
![IMAGE](/5EA365239A6B29B872C5FFC6744ADB5F.jpg)
![IMAGE](/15D7CFDD30392EC2BF0EAB49B6BB3C76.jpg)
![IMAGE](/FA49E5CC73A0A10C821C3936C57BCB9A.jpg)
![IMAGE](/F41CE32C53908BF4D5E80FB1B218FBA8.jpg)
![IMAGE](/B4FAD001C7CF82E9805115D7A1761C99.jpg)
![IMAGE](/1060A7B1BA22B4D4F51F8DAFD9301A6F.jpg)
![IMAGE](/9F49896707D224DF3ECF386AD191B074.jpg)
![IMAGE](/8C79227BC3CDC19E566B61C642D121E5.jpg)
![IMAGE](/2A6AEEBF87E36813C2578DF956596F2A.jpg)

## Design principles

![IMAGE](/A3DE30031F258FCF7F4C66EF011BDCD4.jpg)
![IMAGE](/22F1C111D5904D4046BE91BF0FD0595F.jpg)
![IMAGE](/D125E29BFBC22947EF4D959A274A6944.jpg)
![IMAGE](/DE5E8D050A610DFCC0E49BF232BC91EB.jpg)
![IMAGE](/4D91EDF9990A02FB99BBC4AB66C16E9B.jpg)
![IMAGE](/F567B57FFC157495466D1BC2E4DC96A9.jpg)
![IMAGE](/E597BF7F519DE565512F19A581EB20D1.jpg)
![IMAGE](/452CF0A58002AD5F2360B98C9D5DE560.jpg)
![IMAGE](/CBC2ECB9F08FB0F41BCFDE4E89815875.jpg)
![IMAGE](/1F7592BAAE6605E4AFE850DBC88FACEF.jpg)
![IMAGE](/CAC51BB4A2A907D428B22071C47E0B90.jpg)
![IMAGE](/54BEC6C1A7F241248D6640893B536309.jpg)
![IMAGE](/30BE1356F7032786B34676696235AE50.jpg)
![IMAGE](/D66BA9F92488E432910193D492E3A506.jpg)
![IMAGE](/F645C862F35C9C55621FD920A24D5CBC.jpg)
![IMAGE](/AFBEA05C3B82CF27331A7D3596CC3BD2.jpg)
![IMAGE](/94B91780888D5DB77A41A8E11B5AFB27.jpg)
![IMAGE](/8B5092636CF3C2653A16ADE082A93F0C.jpg)
![IMAGE](/57107F12328C98E673D92EF6672ACE63.jpg)
![IMAGE](/2874FFE2CD8056AB9B56F47AC42B2CD8.jpg)
![IMAGE](/07CC7F1D5372E0A2F3F45795572813FF.jpg)
![IMAGE](/C51EB76FC4EE13E64F9C11462C8DA321.jpg)

## "The Art of Clean Code" video

![IMAGE](/88A0BB18FBEC4CF66BF1CD2355FDD5E4.jpg)
![IMAGE](/1FBEE6A0F2A24A6DA208C50D085BBA89.jpg)
![IMAGE](/FB2AFF9438EB751E19E422DF3795FF4E.jpg)
![IMAGE](/08C9B5C9693312FBB9483566C21F5D8B.jpg)
![IMAGE](/BBFD47804265555D45DF6C0F3AB6AA6D.jpg)
![IMAGE](/15A99775E092AE226A74042ED427897C.jpg)
![IMAGE](/A34B255697F3C593839814A52E6F253E.jpg)
![IMAGE](/3CDE69FEA750F4922B1F0B851513D89E.jpg)
![IMAGE](/7D7CC278DB67D54A66BAE0F1B22BB03F.jpg)
![IMAGE](/B83A46AA6C043BEEB397A2BD14754A4D.jpg)
![IMAGE](/C0651EB682B3019FF9F3838D285C43DE.jpg)
![IMAGE](/69E544BF585F27EE7EBCDBC460C2B64A.jpg)
![IMAGE](/C3E369D9721C7D561C02ED1834D18747.jpg)
![IMAGE](/4340F063278C5170053A4A7DA1A11B27.jpg)
![IMAGE](/8F7234537A4883A2787996308ECADF0A.jpg)
![IMAGE](/51E6B70E6E72488075E89FC3C7D97A28.jpg)
![IMAGE](/EBCB672BF3CDAE780FDB83A65B3C8AA0.jpg)
![IMAGE](/2AE485C5E82B2F673C1F3DAF5ABC0BE8.jpg)
![IMAGE](/21403DFAE1FE09C36149861BB0B01991.jpg)
![IMAGE](/BF45D8CBC468D96187C1BD2AE2E2E0A3.jpg)
![IMAGE](/D9C91E7200C72CD48673B1E3F9244F04.jpg)
![IMAGE](/840CF17951950031EE338F0131809101.jpg)
![IMAGE](/D8DC49BB92096970D011C126992591CB.jpg)
![IMAGE](/74D4EA2340C85EF4000BCA03401A65B2.jpg)
![IMAGE](/87F4727FC644203702A717BCFAC50A04.jpg)
![IMAGE](/87BB6E97BD7B50C8D69B17AC7961BB20.jpg)
![IMAGE](/65DF4228BF56CD92A905A52D7285C26E.jpg)
![IMAGE](/FA9B00A88F72260D10153F35B4B8C1B0.jpg)
![IMAGE](/F9BF0CB6CAE4E0BC18AC26F14CE06294.jpg)
![IMAGE](/82BCE36585BA0D5B599FEAA27E97576F.jpg)
![IMAGE](/B3FF98CE536F7820FD97AE2218CAD6C7.jpg)
![IMAGE](/BC6E95FE7D090BA6EA16F43F3F87BEF8.jpg)
![IMAGE](/095657D0AEA7194BD2C9B4D98CE31CFB.jpg)
![IMAGE](/64638C5134560F99347D319AA3164904.jpg)
![IMAGE](/8914994306EAFDC5315C53B5080A7FA3.jpg)
![IMAGE](/903B3AA72914705EDE80FF21AD61FC56.jpg)
![IMAGE](/9D8020019F293EE798A0ECF3D862C82A.jpg)
![IMAGE](/6B5649B4390C1DC8438B78D75071BDFE.jpg)
![IMAGE](/BB779B33BDEAC5E2E452D3F9B9810418.jpg)
![IMAGE](/22E053F28D16E2AB8AF27012138A21A3.jpg)
![IMAGE](/559CF28289E9ACAB8627341E4308123B.jpg)
![IMAGE](/CB5249B92C74FEE907DDDF75BA0BAF8D.jpg)
![IMAGE](/0D3E409716DA47AB8C1830B562255147.jpg)
![IMAGE](/0EDCB5ECA4587EFB9E33D343E0E36E77.jpg)
![IMAGE](/41AD02E35A37C8D4EFDF0B0B10599169.jpg)
![IMAGE](/316A078DE7D14419E98E47516172C2EF.jpg)
![IMAGE](/FA5F156CF64781BF97E40EEED9A0A8D0.jpg)
![IMAGE](/5377A06DA469D3FFA640E5ACE3717E37.jpg)
![IMAGE](/A38C9B18358DA8CCAFE4586F4717FED7.jpg)
![IMAGE](/662076211F1C6E0E002E7ACA12276945.jpg)
![IMAGE](/681C3E2C06D602F0F919353EEB0899CB.jpg)
![IMAGE](/F54E976DE7E45FFAD0D66F7239CA1030.jpg)
![IMAGE](/D23AB79F3F4FC6C766F06896633ABD91.jpg)
![IMAGE](/8F0B367E05B5C16ED757D28CB6B30E79.jpg)
![IMAGE](/73874806A7E88BC9E3BDDD6B2AA3CB2D.jpg)
![IMAGE](/888F1B5EDB4D1F3EA370759AAF339391.jpg)
![IMAGE](/CF8B93F36F3109675EC95A5A49E54D8C.jpg)
![IMAGE](/2686DDCA46859F01C9FD84BAEF210313.jpg)
![IMAGE](/7858167B6D3ED72ED59F35D47DCF71DC.jpg)
![IMAGE](/65A420DA04294628443CF7C417AC9F3E.jpg)
![IMAGE](/506AC7DE358CF5993C253F5A2EF270DB.jpg)
![IMAGE](/2CE363EA85F992DF2692663E387DAA83.jpg)
![IMAGE](/A92D2EE7A9435B6C6FC2B4FD30D7433E.jpg)
![IMAGE](/F5BAED88894AC0E3093F6E0626372962.jpg)
![IMAGE](/E6245052AB66C948F28A68E95CAEA6FF.jpg)
![IMAGE](/C95732CACFCAD60123B230F1FD62E3FF.jpg)
![IMAGE](/EBE799AAB04CED0D65E42E8FF56A8DC7.jpg)
![IMAGE](/FE1C6D85DC23C3E487CF87CF20958682.jpg)
![IMAGE](/CF94DBD60876C0C5F23C315CA94CF5AD.jpg)
![IMAGE](/D835525971AB39B46CFA4B18D0E4E171.jpg)
![IMAGE](/CEDB5811C1D43AC006298720D9B2AD7D.jpg)
![IMAGE](/B6B1909FD6409930A093F32855E93763.jpg)
![IMAGE](/02CB99D1CBDAAC1A18A38F5FCA05B09B.jpg)
![IMAGE](/607F3F7F08465ABFA1D335445BAB706C.jpg)
![IMAGE](/4EAA249150885BE2E6F628928E7171D8.jpg)
![IMAGE](/12CAEF398570E6081613F78A149964B6.jpg)

Summary:

Victor Rentea's clean code video had a lot of amazing information for making sure that the code you write is considered "clean." I think that clean code is a very important part of being a good programmer because it conveys the sense that you care about your team's ability to read your code. 

My biggest surprise after watching the video was that writing clean code has little to do with the actual formatting of your file. Instead, it has to do with the way you organize your file. Simple things like making sure that each function is only doing one thing, and not adding ambiguous words to your class/function names. Another big aspect of writing clean code has to do with the continual refactoring and maintenance of your code. To sum up Victor's ideas: once your code works don't consider yourself done. It takes an ongoing effort to maintain clean code because of the ever evolving nature of software engineering. 

Another very interesting aspect of Victor's talk had to do with comments. Comments can easily become redundant if the code you are writing follows good naming conventions and isn't obfuscated in any way. Victor explains that you should always be able to express what your code is doing *with code*, and comments will fall out of sync with code when it is inevitably changed in the future.

A good point Victor had was on the topic of OOP. It is a common misunderstanding that just because your class has private fields and public accessors that you are practicing OOP. He explained that most business logic will lend itself nicely to procedural code, and that you can successfully utilize OOP by putting short and simple procedural code inside what he called "logic containers."

Overall, all of his explanations were very good and should make a lot of sense to someone who strives to write clean code, myself included.
